# Cross-compile Firefox for Windows from Linux
ac_add_options --target=x86_64-pc-windows-gnu
ac_add_options --host=x86_64-pc-linux-gnu

# Cross-compilation toolchain configuration
export CC="x86_64-w64-mingw32-gcc"
export CXX="x86_64-w64-mingw32-g++"
export AR="x86_64-w64-mingw32-ar"
export RANLIB="x86_64-w64-mingw32-ranlib"
export STRIP="x86_64-w64-mingw32-strip"
export WINDRES="x86_64-w64-mingw32-windres"
export DLLTOOL="x86_64-w64-mingw32-dlltool"

# Host tools (use system versions)
export HOST_CC="gcc"
export HOST_CXX="g++"

# Rust cross-compilation
export CARGO_TARGET_X86_64_PC_WINDOWS_GNU_LINKER="x86_64-w64-mingw32-gcc"
export RUSTFLAGS="-C linker=x86_64-w64-mingw32-gcc"

# Additional cross-compilation flags
export CFLAGS="-D_FORTIFY_SOURCE=2"
export CXXFLAGS="-D_FORTIFY_SOURCE=2"
export LDFLAGS="-Wl,--no-insert-timestamp"

# Windows-specific optimizations
ac_add_options --enable-strip
ac_add_options --enable-install-strip

# Disable features that may cause cross-compilation issues
ac_add_options --disable-maintenance-service
ac_add_options --disable-updater
ac_add_options --disable-crashreporter
ac_add_options --disable-debug
ac_add_options --disable-tests

# Enable optimization
ac_add_options --enable-optimize
ac_add_options --enable-release
