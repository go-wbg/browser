name: Build Firefox for Windows

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-windows:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Free Disk Space
        uses: endersonmenezes/free-disk-space@v2
        with:
          remove_android: true
          remove_dotnet: true
          remove_haskell: true
          remove_tool_cache: true
          remove_swap: true
          remove_packages: "azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox postgresql* temurin-* *llvm* mysql* dotnet-sdk-*"
          remove_packages_one_command: true
          remove_folders: "/usr/share/swift /usr/share/miniconda /usr/share/az* /usr/share/glade* /usr/local/lib/node_modules /usr/local/share/chromium /usr/local/share/powershell"
          testing: false
        
      - name: Install cross-compilation dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-mingw-w64-x86-64 \
            g++-mingw-w64-x86-64 \
            mingw-w64-tools \
            wine64 \
            wine*dev* \
            python3-pip \
            curl \
            git \
            msitools \
            build-essential \
            autoconf \
            automake \
            libtool \
            pkg-config \
            yasm \
            nasm \
            cmake \
            zip \
            unzip \
            wget \
            clang \
            llvm \
            libclang-dev \
            cbindgen \
            mingw-w64-x86-64-dev \
            mingw-w64-common
          python3 -m pip install --upgrade pip
          sudo apt-get autoremove -y
          sudo apt-get clean -y
          sudo apt-get autoclean -y
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Set up Rust with Windows target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
          target: x86_64-pc-windows-gnu
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
  
      - name: Download and prepare extensions
        run: |
          # Install jq for JSON parsing
          sudo apt-get install -y jq
          
          # Download extensions
          bash extensions/download.sh
  
      - name: Clone Firefox repository
        run: |
          git clone --depth 1 https://github.com/mozilla/gecko-dev firefox-source
      
      - name: Inject configuration files
        run: |
          # Create directory for user preferences if it doesn't exist
          mkdir -p firefox-source/browser/app/profile/
          
          # Copy common configuration files
          if [ -d "./config/common" ]; then
            # Copy user.js if it exists
            if [ -f "./config/common/user.js" ]; then
              cp "./config/common/user.js" "firefox-source/browser/app/profile/"
              echo "Copied common user.js file"
            fi
            
            # Apply patches if they exist
            if [ -d "./config/common/patches" ]; then
              for patch in ./config/common/patches/*.patch; do
                if [ -f "$patch" ]; then
                  echo "Applying common patch: $patch"
                  cd firefox-source
                  git apply "../$patch"
                  cd ..
                fi
              done
            fi
          fi
          
          # Copy Windows-specific configuration files
          if [ -d "./config/windows" ]; then
            # Apply Windows-specific patches if they exist
            if [ -d "./config/windows/patches" ]; then
              for patch in ./config/windows/patches/*.patch; do
                if [ -f "$patch" ]; then
                  echo "Applying Windows-specific patch: $patch"
                  cd firefox-source
                  git apply "../$patch"
                  cd ..
                fi
              done
            fi
          fi
          
          # Copy any other custom files/directories
          if [ -d "./config/common/custom" ]; then
            cp -r ./config/common/custom/* firefox-source/
            echo "Copied common custom files"
          fi
          
          if [ -d "./config/windows/custom" ]; then
            cp -r ./config/windows/custom/* firefox-source/
            echo "Copied Windows-specific custom files"
          fi
          
          # Copy distribution directory if it exists
          if [ -d "./config/common/distribution" ]; then
            mkdir -p firefox-source/browser/app/distribution
            cp -r ./config/common/distribution/* firefox-source/browser/app/distribution/
            echo "Copied distribution directory with extensions"
          fi
      
      - name: Install additional Firefox dependencies
        run: |
          # Install Python dependencies for Firefox build system
          python3 -m pip install \
            setuptools \
            zstandard \
            psutil \
            six \
            toml
          
          # Install cbindgen if not already available
          cargo install cbindgen || true
          
          # Set up MinGW alternatives
          sudo update-alternatives --install /usr/bin/x86_64-w64-mingw32-gcc x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix 100
          sudo update-alternatives --install /usr/bin/x86_64-w64-mingw32-g++ x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix 100
          
          # Verify cross-compilation toolchain
          x86_64-w64-mingw32-gcc --version
          x86_64-w64-mingw32-g++ --version
      
      - name: Configure build
        working-directory: firefox-source
        run: |
          # Start with empty mozconfig
          touch mozconfig
          
          # Append common mozconfig if it exists
          if [ -f "../config/common/mozconfig.common" ]; then
            cat "../config/common/mozconfig.common" >> mozconfig
            echo "Appended common mozconfig settings"
          fi
          
          # Append Windows-specific mozconfig if it exists  
          if [ -f "../config/windows/mozconfig.win" ]; then
            echo "" >> mozconfig
            cat "../config/windows/mozconfig.win" >> mozconfig
            echo "Appended Windows-specific mozconfig settings"
          fi
      
      - name: Bootstrap build environment
        working-directory: firefox-source
        run: |
          python3 ./mach --no-interactive bootstrap --application-choice=browser

      - name: Build Firefox
        working-directory: firefox-source
        run: |
          python3 ./mach build -j$(nproc)
      
      - name: Package Firefox
        working-directory: firefox-source
        run: |
          python3 ./mach package
      
      - name: List packages in the repository
        run: |
          echo "Repository contents:"
          find . -name '*.zip'

      - name: Upload Windows build
        uses: actions/upload-artifact@v4
        with:
          name: firefox-windows.zip
          path: firefox-source/obj-*/dist/firefox-*.zip
          if-no-files-found: warn
