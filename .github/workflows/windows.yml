name: Build Firefox for Windows

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-windows:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Install cross-compilation dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-mingw-w64-x86-64 \
            g++-mingw-w64-x86-64 \
            mingw-w64-tools \
            wine64 \
            python3-pip \
            curl \
            git \
            msiextract
          python3 -m pip install --upgrade pip
      
      - name: Set up Rust with Windows target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
          target: x86_64-pc-windows-gnu
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
  
      - name: Clone Firefox repository
        run: |
          git clone --depth 1 https://github.com/mozilla/gecko-dev firefox-source
      
      - name: Inject configuration files
        run: |
          # Create directory for user preferences if it doesn't exist
          mkdir -p firefox-source/browser/app/profile/
          
          # Copy common configuration files
          if [ -d "./config/common" ]; then
            # Copy user.js if it exists
            if [ -f "./config/common/user.js" ]; then
              cp "./config/common/user.js" "firefox-source/browser/app/profile/"
              echo "Copied common user.js file"
            fi
            
            # Apply patches if they exist
            if [ -d "./config/common/patches" ]; then
              for patch in ./config/common/patches/*.patch; do
                if [ -f "$patch" ]; then
                  echo "Applying common patch: $patch"
                  cd firefox-source
                  git apply "../$patch"
                  cd ..
                fi
              done
            fi
          fi
          
          # Copy Windows-specific configuration files
          if [ -d "./config/windows" ]; then
            # Apply Windows-specific patches if they exist
            if [ -d "./config/windows/patches" ]; then
              for patch in ./config/windows/patches/*.patch; do
                if [ -f "$patch" ]; then
                  echo "Applying Windows-specific patch: $patch"
                  cd firefox-source
                  git apply "../$patch"
                  cd ..
                fi
              done
            fi
          fi
          
          # Copy any other custom files/directories
          if [ -d "./config/common/custom" ]; then
            cp -r ./config/common/custom/* firefox-source/
            echo "Copied common custom files"
          fi
          
          if [ -d "./config/windows/custom" ]; then
            cp -r ./config/windows/custom/* firefox-source/
            echo "Copied Windows-specific custom files"
          fi
      
      - name: Configure build
        working-directory: firefox-source
        run: |
          # Start with empty mozconfig
          touch mozconfig
          
          # Append common mozconfig if it exists
          if [ -f "../config/common/mozconfig.common" ]; then
            cat "../config/common/mozconfig.common" >> mozconfig
            echo "Appended common mozconfig settings"
          fi
          
          # Append Windows-specific mozconfig if it exists  
          if [ -f "../config/windows/mozconfig.win" ]; then
            echo "" >> mozconfig
            cat "../config/windows/mozconfig.win" >> mozconfig
            echo "Appended Windows-specific mozconfig settings"
          fi
      
      - name: Bootstrap build environment
        working-directory: firefox-source
        run: |
          python3 ./mach --no-interactive bootstrap --application-choice=browser

      - name: Build Firefox
        working-directory: firefox-source
        run: |
          python3 ./mach build -j$(nproc)
      
      - name: Package Firefox
        working-directory: firefox-source
        run: |
          python3 ./mach package
      
      - name: Upload Windows build
        uses: actions/upload-artifact@v4
        with:
          name: firefox-windows
          path: |
            firefox-source/obj-*/dist/firefox-*.zip
            firefox-source/obj-*/dist/firefox-*.exe
          if-no-files-found: warn
