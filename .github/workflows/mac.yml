name: Build Firefox for macOS

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-mac:
    runs-on: macos-latest
    timeout-minutes: 300  # 5 hours
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Install build dependencies
        run: |
          brew update
          brew install yasm mercurial python3 ccache libidl autoconf@2.13 node
          brew install llvm
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          override: true
      
      - name: Download and prepare extensions
        run: |
          # Install jq for JSON parsing
          brew install jq
          
          # Download extensions
          bash extensions/download.sh
      
      - name: Clone Firefox repository
        run: |
          git clone --depth 1 https://github.com/mozilla-firefox/firefox firefox-source
      
      - name: Inject configuration files
        run: |
          # Create directory for user preferences if it doesn't exist
          mkdir -p firefox-source/browser/app/profile/

          # Copy common configuration files
          if [ -d "./config/common" ]; then
            # Copy user.js if it exists
            if [ -f "./config/common/user.js" ]; then
              cp "./config/common/user.js" firefox-source/browser/app/profile/
              echo "Copied common user.js file"
            fi
            
            # Apply patches if they exist
            if [ -d "./config/common/patches" ] && [ "$(ls -A ./config/common/patches)" ]; then
              echo "Applying common patches..."
              for patch in ./config/common/patches/*.patch; do
                [ -f "$patch" ] || continue
                cd firefox-source && git apply "../$patch" && cd ..
                echo "Applied patch: $patch"
              done
            fi
          fi
          
          # Copy macOS-specific configuration files
          if [ -d "./config/mac" ]; then
            # Apply macOS-specific patches if they exist
            if [ -d "./config/mac/patches" ] && [ "$(ls -A ./config/mac/patches)" ]; then
              echo "Applying macOS-specific patches..."
              for patch in ./config/mac/patches/*.patch; do
                [ -f "$patch" ] || continue
                cd firefox-source && git apply "../$patch" && cd ..
                echo "Applied patch: $patch"
              done
            fi
          fi
          
          # Copy any other custom files/directories
          if [ -d "./config/common/custom" ]; then
            cp -r ./config/common/custom/* firefox-source/
            echo "Copied common custom files"
          fi
          
          if [ -d "./config/mac/custom" ]; then
            cp -r ./config/mac/custom/* firefox-source/
            echo "Copied macOS-specific custom files"
          fi
          
          # Copy distribution directory if it exists
          if [ -d "./config/common/distribution" ]; then
            mkdir -p firefox-source/browser/app/distribution
            cp -r ./config/common/distribution/* firefox-source/browser/app/distribution/
            echo "Copied distribution directory with extensions"
          fi
      
      - name: Configure build
        working-directory: firefox-source
        run: |          
          # Append common mozconfig if it exists
          if [ -f "../config/common/mozconfig.common" ]; then
            cat "../config/common/mozconfig.common" >> mozconfig
            echo "Appended common mozconfig settings"
          fi
          
          # Append macOS-specific mozconfig if it exists
          if [ -f "../config/mac/mozconfig.mac" ]; then
            cat "../config/mac/mozconfig.mac" >> mozconfig
            echo "Appended macOS-specific mozconfig settings"
          fi
      
      - name: Bootstrap build environment
        working-directory: firefox-source
        run: |
          ./mach --no-interactive bootstrap --application-choice=browser
      
      - name: Build Firefox
        working-directory: firefox-source
        run: |
          ./mach build
      
      - name: Package Firefox
        working-directory: firefox-source
        run: |
          ./mach package
      
      - name: List packages in the repository
        run: |
          echo "Repository contents:"
          find . -name '*.dmg'

      - name: Upload macOS build
        uses: actions/upload-artifact@v4
        with:
          name: firefox-macos.dmg
          path: firefox-source/obj-*/dist/firefox-*.dmg
          if-no-files-found: warn
